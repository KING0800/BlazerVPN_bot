import os 

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv

load_dotenv('.env')

BLAZER_CHAT_TOKEN = os.getenv("BLAZER_CHAT_TOKEN") 
ANUSH_CHAT_TOKEN = os.getenv("ANUSH_CHAT_TOKEN")

# —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–æ–æ–±—â–µ –±–æ—Ç–æ–º
def start_kb_handle(user_id) -> InlineKeyboardMarkup:
    start_keyboard = InlineKeyboardMarkup()
    start_keyboard.add(
                InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å VPN ", callback_data="buy"),
                InlineKeyboardButton(text="‚åõÔ∏è –ü—Ä–æ–¥–ª–∏—Ç—å VPN", callback_data="extend_vpn_info")
    )
    start_keyboard.add(
        InlineKeyboardButton(text="üõ°Ô∏è –°–ø–∏—Å–æ–∫ –º–æ–∏—Ö VPN", callback_data="myvpn_callback")
    )
    start_keyboard.add(
                InlineKeyboardButton(text="üíµ –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å", callback_data="balance")
    )
    start_keyboard.add(
        InlineKeyboardButton(text="üßë‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", callback_data="help_callback"),
        InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support_callback")
    )
    start_keyboard.add(
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile_callback")
    )
    if int(user_id) == int(BLAZER_CHAT_TOKEN) or int(user_id) == int(ANUSH_CHAT_TOKEN):
        start_keyboard.add(
            InlineKeyboardButton(text="ü§ñ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="adm_panel_callback")
        )
        return start_keyboard
    else:
        return start_keyboard
    
# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
support_keyboard = InlineKeyboardMarkup()
support_keyboard.add(
        InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support_callback")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–æ–∫–∞—Ü–∏–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–∏ VPN
location_keyboard = InlineKeyboardMarkup()
location_keyboard.add(
        # InlineKeyboardButton(text="üá´üáÆ –§–∏–Ω–ª—è–Ω–¥–∏—è", callback_data="Finland_callback"),   
        InlineKeyboardButton(text="üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è", callback_data="Germany_callback"),
        InlineKeyboardButton(text="üá∏üá™ –®–≤–µ—Ü–∏—è", callback_data="Sweden_callback"),
        InlineKeyboardButton(text="üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã", callback_data="Netherlands_callback")
)        
location_keyboard.add(
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ VPN –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –®–≤–µ—Ü–∏—è
pay_sweden_keyboard = InlineKeyboardMarkup()
pay_sweden_keyboard.add(
    InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data="Buying_sweden_VPN"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ VPN –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –§–∏–Ω–ª—è–Ω–¥–∏—è
pay_finland_keyboard = InlineKeyboardMarkup()
pay_finland_keyboard.add(
    InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data="Buying_finland_VPN"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ VPN –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –ì–µ—Ä–º–∞–Ω–∏—è
pay_germany_keyboard = InlineKeyboardMarkup()
pay_germany_keyboard.add(
    InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data="Buying_germany_VPN"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

pay_netherlands_keyboard = InlineKeyboardMarkup()
pay_netherlands_keyboard.add(
    InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data="Buying_netherlands_VPN"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
replenishment_balance = InlineKeyboardMarkup()
replenishment_balance.add(
    InlineKeyboardButton(text="üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="replenishment"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
back_keyboard = InlineKeyboardMarkup()
back_keyboard.add(
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
insturtion_keyboard = InlineKeyboardMarkup()
insturtion_keyboard.add(
    InlineKeyboardButton(text="üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction_keyboard.answer"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ –ø–æ–∫—É–ø–∫–µ VPN
buy_keyboard = InlineKeyboardMarkup()
buy_keyboard.add(
    InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å VPN", callback_data="buy"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)
buy_keyboard.add(
    InlineKeyboardButton(text="üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction_keyboard.edit")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—é VPN
extend_keyboard = InlineKeyboardMarkup()
extend_keyboard.add(
    InlineKeyboardButton(text="üíµ –ü—Ä–æ–¥–ª–∏—Ç—å VPN", callback_data="extend_sole_vpn"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
numbers_for_replenishment = InlineKeyboardMarkup()
numbers_for_replenishment.add(
    InlineKeyboardButton(text="üíµ 100", callback_data="100_for_replenishment_callback"),
    InlineKeyboardButton(text="üíµ 200", callback_data="200_for_replenishment_callback"),
    InlineKeyboardButton(text="üíµ 500", callback_data="500_for_replenishment_callback")
)
numbers_for_replenishment.add(
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ VPN, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥–ª–∏—Ç—å
def addind_count_for_extend(count) -> InlineKeyboardMarkup:
    numbers_for_extend = InlineKeyboardMarkup()
    numbers_for_extend.row() 
    for i in range(1, count + 1):
        numbers_for_extend.insert(InlineKeyboardButton(text=f"{i}.", callback_data=f"extend_some_vpn_{i}"))
    numbers_for_extend.add(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
    )
    return numbers_for_extend

async def final_extend_some_vpn(number) -> InlineKeyboardMarkup:    
    final_extend_some_vpn = InlineKeyboardMarkup()
    final_extend_some_vpn.add(
        InlineKeyboardButton(text="‚åõÔ∏è –ü—Ä–æ–¥–ª–∏—Ç—å VPN", callback_data=f"final_extend_vpn_{number}"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
    )
    return final_extend_some_vpn

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—É –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
async def payment_type_keyboard(price: int) -> InlineKeyboardMarkup:
    payment_type = InlineKeyboardMarkup()
    payment_type.add(
        InlineKeyboardButton(text="üí≥ YooMoney", callback_data=f"yoomoney_callback_{price}"),
        InlineKeyboardButton(text="üí≥ YooKassa", callback_data=f"yookassa_callback_{price}")
        # InlineKeyboardButton(text="üí≥ NicePay", callback_data=f"nicepay_callback_{price}"),
    )
    payment_type.add(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
    )
    return payment_type

async def create_payment_keyboard(payment_id: str, payment_url: str, payment_type: str) -> InlineKeyboardMarkup:
    payment_button = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url),
                InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"checking_{payment_type}_payment_{payment_id}")
            ]
        ]
    )
    print(payment_id)
    payment_button.add(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
    )
    return payment_button

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
promocode_keyboard = InlineKeyboardMarkup()
promocode_keyboard.add(
    InlineKeyboardButton(text="–ö–∞–Ω–∞–ª", url="https://t.me/blazervpn"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
)

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—É –¥–µ–≤–∞–π—Å–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —á–µ–ª–æ–≤–µ–∫ —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
device_keyboard = InlineKeyboardMarkup()
device_keyboard.add(
    InlineKeyboardButton(text="üì± Android", url="https://telegra.ph/Nastrojka-dlya-Android-08-28"),
    InlineKeyboardButton(text="üçè iOS", url="https://telegra.ph/Nastrojka-dlya-IOS-08-28")
)
device_keyboard.add(
    InlineKeyboardButton(text="üñ•  Windows", url="https://telegra.ph/Nastrojka-dlya-Windows-08-28"),
    InlineKeyboardButton(text="üçè MacOS", url="https://telegra.ph/Nastrojka-dlya-MacOS-08-28")
)
device_keyboard.add(
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)

ref_system_keyboard = InlineKeyboardMarkup()
ref_system_keyboard.add(
    InlineKeyboardButton(text="ü§ù –†–µ—Ñ–µ—Ä–∞–ª–∫–∞", callback_data="ref_system_callback"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)

find_balance_keyboard = InlineKeyboardMarkup()
find_balance_keyboard.add(
    InlineKeyboardButton(text="üíµ –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="balance"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)

balance_handle_keyboard = InlineKeyboardMarkup()
balance_handle_keyboard.add(
    InlineKeyboardButton(text="üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="replenishment"),
    InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π", callback_data="history_of_operations_callback")
)
balance_handle_keyboard.add(
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)

help_kb = InlineKeyboardMarkup()
help_kb.add(
    InlineKeyboardButton(text="üßë‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", url="https://t.me/KING_08001"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)

support_to_moders = InlineKeyboardMarkup()
support_to_moders.add(
    InlineKeyboardButton(text="üÜò –ú–æ–¥–µ—Ä–∞—Ü–∏—è", url="https://t.me/blazer_helper"),
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)
async def vpn_connection_type_keyboard(location) -> InlineKeyboardMarkup:
    vpn_connection_type_keyboard = InlineKeyboardMarkup()
    vpn_connection_type_keyboard.add(
        InlineKeyboardButton(text="üß¶ Shadowsocks", callback_data=f"vpn_connection_type_callback.{location}"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
    )
    return vpn_connection_type_keyboard

profile_keyboard = InlineKeyboardMarkup()
profile_keyboard.add(
    InlineKeyboardButton(text="ü§ù –†–µ—Ñ–µ—Ä–∞–ª–∫–∞", callback_data="ref_system_callback"),
    InlineKeyboardButton(text="üéü –ü—Ä–æ–º–æ–∫–æ–¥—ã", callback_data="promo_callback")
)
profile_keyboard.add(
    InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π", callback_data="history_of_operations_callback"),
    InlineKeyboardButton(text="üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="replenishment")

)    
profile_keyboard.add(
    InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back") 
)    

check_balance_keyboard = InlineKeyboardMarkup()
check_balance_keyboard.add(
    InlineKeyboardButton(text="üíµ –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="balance")
)
check_balance_keyboard.add(
    InlineKeyboardButton(text="‚ùì –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π?", url="https://t.me/blazer_helper")
)

def checking_message_limit(current_message_part: int) -> InlineKeyboardMarkup:
    check_message_limit_kb = InlineKeyboardMarkup()
    check_message_limit_kb.add(
        InlineKeyboardButton(text=f"–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ({current_message_part + 1})", callback_data=f'vpn_info_{current_message_part + 1}')
)
    check_message_limit_kb.add(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
) 
    
    return check_message_limit_kb

def verify_user(ref_id: int) -> InlineKeyboardMarkup:
    verify_user_kb = InlineKeyboardMarkup()
    verify_user_kb.add(
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"verify_user.{ref_id}"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
    )
    return verify_user_kb